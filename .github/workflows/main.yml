# This is a basic workflow to help you get started with Actions

name: demo

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build-and-push:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        name: checkout code

      - uses: mr-smithers-excellent/docker-build-push@v5
        name: Build & push Docker image
        with:
          image: feisty-reporter-335214/demo-docker-registry/kotlin-demo
          tags: latest
          registry: asia-southeast1-docker.pkg.dev
          dockerfile: Dockerfile
          username: _json_key
          password: ${{ secrets.GOOGLE_CREDENTIALS }}
  deploy-dev:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        name: checkout code
      - uses: hashicorp/setup-terraform@v1
        name: setup terraform
      - name: terraform init
        working-directory: ./infrastructure
        run: terraform init
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}
      - name: terraform workspace
        working-directory: ./infrastructure
        run: terraform workspace select dev || terraform workspace new dev
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}
      - name: terraform apply
        working-directory: ./infrastructure
        run: terraform apply --var-file=dev.tfvars -auto-approve
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}
  deploy-uat:
    needs: deploy-dev
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        name: checkout code
      - uses: hashicorp/setup-terraform@v1
        name: setup terraform
      - name: terraform init
        working-directory: ./infrastructure
        run: terraform init
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}
      - name: terraform workspace
        working-directory: ./infrastructure
        run: terraform workspace select uat || terraform workspace new uat
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}
      - name: terraform apply
        working-directory: ./infrastructure
        run: terraform apply --var-file=uat.tfvars -auto-approve
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}